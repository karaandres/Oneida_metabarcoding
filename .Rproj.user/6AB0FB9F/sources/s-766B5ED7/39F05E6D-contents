### Oneida eDNA analysis
### Updated 3.25.2020 by Kara Andres (kja68@cornell.edu)

pdent_98_F <- read.csv("/Users/kbja10/Downloads/eDNA_counts_pident_98_restrict_FALSE.csv")
pdent_98_T <- read.csv("/Users/kbja10/Downloads/eDNA_counts_pident_98_restrict_TRUE.csv")
pdent_95_F <- read.csv("/Users/kbja10/Downloads/eDNA_counts_pident_95_restrict_FALSE.csv")
pdent_95_T <- read.csv("/Users/kbja10/Downloads/eDNA_counts_pident_95_restrict_TRUE.csv")

mean_control_reads <- 92 # mean number of reads assigned to species in negative control samples 

pdent_98_F[pdent_98_F < mean_control_reads] <- 0
pdent_98_F_filt <- pdent_98_F[,colSums(pdent_98_F)>0] # exclude colunns where counts do not exceed threshold

pdent_98_T[pdent_98_T < mean_control_reads] <- 0
pdent_98_T_filt <- pdent_98_T[,colSums(pdent_98_T)>0] # exclude colunns where counts do not exceed threshold

pdent_95_F[pdent_95_F < mean_control_reads] <- 0
pdent_95_F_filt <- pdent_95_F[,colSums(pdent_95_F)>0] # exclude colunns where counts do not exceed threshold

pdent_95_T[pdent_95_T < mean_control_reads] <- 0
pdent_95_T_filt <- pdent_95_T[,colSums(pdent_95_T)>0] # exclude colunns where counts do not exceed threshold

# Remove non-fish/marine species
names(pdent_95_F_filt)
pdent_98_F_filt <- pdent_98_F_filt[ , -which(names(pdent_98_F_filt) %in% c("cattle","eastern.newt","Gulf.Coast.waterdog","human","marsh.tit","pig","Ralstonia.solanacearum","saithe","two.lined.salamander"))]
# pdent_98_T_filt <- pdent_98_T_filt[ , -which(names(pdent_98_T_filt) %in% c("cattle","eastern.newt","Gulf.Coast.waterdog","human","marsh.tit","pig","Ralstonia.solanacearum","saithe","two.lined.salamander"))]
pdent_95_F_filt <- pdent_95_F_filt[ , -which(names(pdent_95_F_filt) %in% c("cattle","eastern.newt","Gulf.Coast.waterdog","human","marsh.tit","pig","Ralstonia.solanacearum","saithe","two.lined.salamander"))]
# pdent_95_T_filt <- pdent_95_T_filt[ , -which(names(pdent_95_T_filt) %in% c("cattle","eastern.newt","Gulf.Coast.waterdog","human","marsh.tit","pig","Ralstonia.solanacearum","saithe","two.lined.salamander"))]

# species accumulation curves
sp_acc_pdent_98_F_filt <- specaccum(pdent_98_F_filt)
plot(sp_acc_pdent_98_F_filt, ci.type="poly", col="red", lty=3, lwd=3, ci.lty=0, ci.col=alpha("gray", 0.2), 
     ylab="Number of species",xlab="Number of sites", cex.axis=1.5, cex.lab=1.5, ylim = c(0,60))
sp_acc_pdent_98_T_filt <- specaccum(pdent_98_T_filt)
plot(sp_acc_pdent_98_T_filt, ci.type="poly", col="cyan3", lty=2, lwd=3, ci.lty=0, ci.col=alpha("gray", 0.2), add=T)
sp_acc_pdent_95_F_filt <- specaccum(pdent_95_F_filt)
plot(sp_acc_pdent_95_F_filt, ci.type="poly", col="blue", lty=4, lwd=3, ci.lty=0, ci.col=alpha("gray", 0.2), add=T)
sp_acc_pdent_95_T_filt <- specaccum(pdent_95_T_filt)
plot(sp_acc_pdent_95_T_filt, ci.type="poly", col="orange", lty=6, lwd=3, ci.lty=0, ci.col=alpha("gray", 0.2), add=T)
dat <- read.csv("/Users/kbja10/Documents/Cornell/Research/Oneida/EF_datasets/Oneida_2017_comm_dataset.csv")
dat <- dat[,-1]
sp1 <- specaccum(dat)
plot(sp1, ci.type="poly", col="lightgreen", lwd=3, ci.lty=0, ci.col=alpha("lightgreen", 0.5), add=T)

# adjusting for sequences in controls
library(ggplot2)
controls <- read.csv("/Users/kbja10/Downloads/eDNA_counts_pident_98_restrict_FALSE_inc_blanks.csv")
hist(controls$cumul_control, breaks = 75, xlab = "Number of reads", main = "")
pos_controls <- controls[controls$cumul_control>0, which(names(controls) %in% c("X","target","BL1","BL2","BL3","X1BL","X27G","cumul_control"))]
pos_controls$target <- as.factor(pos_controls$target)

ggplot(pos_controls, aes(fill=target, y=cumul_control, x=X)) + 
  geom_bar(stat="identity") + scale_y_log10() + ylab("Sum of reads in all controls") + xlab("Species") +
  scale_fill_discrete(labels=c("Oneida fish", "Non-Oneida fish", "Non-fish", "Not Assigned")) +
  theme(axis.text.x = element_text(angle = 45))

# calculating the mean number of non-zero reads in negative controls
mean(controls$cumul_control)
mean(controls$cumul_control[1:(length(controls$cumul_control)-1)])
mean(controls$cumul_control[controls$cumul_control>0])
non_oneida <- controls[controls$target!=3,]
mean(non_oneida$cumul_control[non_oneida$cumul_control>0], na.rm=T)

# calculating the proportion of reads from S. American fishes in all samples 
options(scipen=999)
read_total <- data.frame("Sample" = factor(names(controls)[3:ncol(controls)]), "Oneida_fish" = NA, "Non_Oneida_fish" = NA, "Non_fish" = NA, "Not_Assigned" = NA)
x=1
for (i in 3:ncol(controls)){
  temp_oneida <- controls[controls$target==1,]
  temp_nononeida <- controls[controls$target==2,]
  temp_nonfish <- controls[controls$target==3,]
  temp_NA <- controls[is.na(controls$target),]
  read_total[x,2] <- sum(temp_oneida[,i], na.rm=T)
  read_total[x,3] <- sum(temp_nononeida[,i], na.rm=T)
  read_total[x,4] <- sum(temp_nonfish[,i], na.rm=T)
  read_total[x,5] <- sum(temp_NA[,i], na.rm=T)
  x=x+1
}
read_props <- data.frame("Sample" = factor(names(controls)[3:ncol(controls)]), "Oneida_fish" = NA, "Non_Oneida_fish" = NA, "Non_fish" = NA, "Not_Assigned" = NA)
x=1
for (i in 3:ncol(controls)){
  temp_oneida <- controls[controls$target==1,]
  temp_nononeida <- controls[controls$target==2,]
  temp_nonfish <- controls[controls$target==3,]
  temp_NA <- controls[is.na(controls$target),]
  read_props[x,2] <- sum(temp_oneida[,i], na.rm=T)/sum(controls[,i])
  read_props[x,3] <- sum(temp_nononeida[,i], na.rm=T)/sum(controls[,i])
  read_props[x,4] <- sum(temp_nonfish[,i], na.rm=T)/sum(controls[,i])
  read_props[x,5] <- sum(temp_NA[,i], na.rm=T)/sum(controls[,i])
  x=x+1
}

read_props1 <- read_props
read_props1$Oneida_fish[read_props1$Oneida_fish<0.001] <- 0 # set reads below the threshold 0.2% to 0
read_props1$Non_Oneida_fish[read_props1$Non_Oneida_fish<0.001] <- 0 # set reads below the threshold 0.2% to 0
read_props1$Non_fish[read_props1$Non_fish<0.001] <- 0 # set reads below the threshold 0.2% to 0
read_props1$Not_Assigned[read_props1$Not_Assigned<0.001] <- 0 # set reads below the threshold 0.2% to 0
for (i in 1:nrow(read_props1)){
  read_props1[i,2:5] <- read_props1[i,2:5]/sum(read_props1[i,2:5])
}

library(tidyr)
read_total_long <- gather(read_total, target, total, Oneida_fish:Not_Assigned, factor_key=TRUE)
# read_total_long <- read_total_long[order(read_total_long$Sample),]
read_props_long <- gather(read_props, target, proportion, Oneida_fish:Not_Assigned, factor_key=TRUE)
read_props1_long <- gather(read_props1, target, proportion, Oneida_fish:Not_Assigned, factor_key=TRUE)
# read_props_long <- read_props_long[order(read_props_long$Sample),]
ggplot(read_total_long, aes(fill=target, y=total, x=Sample)) + 
  geom_bar(position="stack", stat="identity") +
  scale_fill_discrete(labels=c("Oneida fish", "Non-Oneida fish", "Non-fish", "Not Assigned")) +
  theme(axis.text.x = element_text(angle = 45))
ggplot(read_props_long, aes(fill=target, y=proportion, x=Sample)) + 
  geom_bar(position="fill", stat="identity") +
  scale_fill_discrete(labels=c("Oneida fish", "Non-Oneida fish", "Non-fish", "Not Assigned")) +
  theme(axis.text.x = element_text(angle = 45))

# Removal of reads <0.1%
ggplot(read_props1_long, aes(fill=target, y=proportion, x=Sample)) + 
  geom_bar(position="fill", stat="identity") +
  scale_fill_discrete(labels=c("Oneida fish", "Non-Oneida fish", "Non-fish", "Not Assigned")) +
  theme(axis.text.x = element_text(angle = 45))

ggplot(read_props_long[read_props_long$target=="Non_Oneida_fish",]) +
  aes(y=proportion, x=Sample)+geom_bar(stat="identity") +
  theme(axis.text.x = element_text(angle = 45))
ggplot(read_props1_long[read_props1_long$target=="Non_Oneida_fish",]) +
  aes(y=proportion, x=Sample)+geom_bar(stat="identity") +
  theme(axis.text.x = element_text(angle = 45))

